name: 'Fidgrove website - PROD'



trigger:
- master


variables:
  # Pipeline environment
  vmImageName: ubuntu-latest

  # Docker settings
  buildTag: '$(Build.BuildId)'
  dockerImageName: 'fidgrove-website'
  pathDockerFile: './Dockerfile'

  # Azure App Service settings
  appServiceName: 'fidgrove-website'
  appType: 'webAppContainer'


stages:
- stage: BuildProject
  displayName: 'Build stage'
  jobs:
  - job: Build
    pool:
      vmImage: $(vmImageName)
    steps:
      - bash: |
          echo "tag: '$(tag)'"
          echo "NUXT_HOST: '$(NUXT_HOST)'"
          echo "NUXT_PORT: '$(NUXT_PORT)'"
          echo "NUXT_ENV_API_URL: '$(NUXT_ENV_API_URL)'"
        displayName: 'Show variables'

      - task: Docker@2
        displayName: 'Building Docker image'
        inputs:
          command: build
          repository: $(dockerImageName)
          dockerfile: '$(pathDockerFile)'
          containerRegistry: $(dockerRegistryServiceConnection)
          arguments: --build-arg NUXT_ENV_API_URL=$(NUXT_ENV_API_URL)
          tags: |
            $(buildTag)
            latest

      - task: Docker@2
        displayName: 'Push Docker image'
        inputs:
          containerRegistry: '$(dockerRegistryServiceConnection)'
          repository: '$(dockerImageName)'
          command: 'push'
          tags: |
            $(buildTag)
            latest


- stage: DeployProject
  dependsOn: BuildProject
  displayName: 'Deploy stage'
  jobs:
  - job: Deploy
    pool:
      vmImage: $(vmImageName)
    steps:

      - task: AzureRmWebAppDeployment@4
        displayName: 'Deploy to Azure App Service'
        inputs:
          ConnectionType: 'AzureRM'
          azureSubscription: '$(azureSubscription)'
          appType: '$(appType)'
          WebAppName: '$(appServiceName)'
          DockerNamespace: '$(containerRegistry)'
          DockerRepository: '$(dockerImageName)'
          DockerImageTag: '$(buildTag)'
          StartupCommand: 'npm run start'
